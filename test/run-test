#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


TEST_DIR="`dirname "$0"`"
PROJECT_DIR="$( cd "${TEST_DIR}/.." ; pwd -P)"

PATH="${PROJECT_DIR}:$PATH"
export PATH


main()
{
   _options_mini_main "$@"

   MULLE_TESTGEN="`which mulle-testgen`" || exit 1

   local i

   log_verbose "mulle-testgen: `mulle-testgen version` (`mulle-testgen libexec-dir`)"

   local quote
   local args
   local arg

   quote="'"
   args=""
   for arg in "$@"
   do
      case "${arg}" in
         --rerun)
            continue
         ;;
         --serial)
            continue
         ;;
      esac

      arg="${arg//${quote}/${quote}\"${quote}\"${quote}}"
      args="${args} '${arg}'"
   done

   unset quote
   unset arg


   OUTPUT_DEVICE=
   for i in "${TEST_DIR}"/*
   do
      if [ -x "$i/run-test" ]
      then
         log_verbose "------------------------------------------"
         log_info    "$i:"
         log_verbose "------------------------------------------"
         if [ "${MULLE_FLAG_LOG_TERSE}" = 'YES' ]
         then
            ( cd "$i" && eval "./run-test" "${args}" > /dev/null 2>&1 ) || fail "Test \"$i\" failed"
         else
            ( cd "$i" && eval "./run-test" "${args}" ) || fail "Test \"$i\" failed"
         fi
      fi
   done
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
}


init "$@"
main "$@"

